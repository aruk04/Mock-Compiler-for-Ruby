
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN ASSIGN_ASSIGN BEGIN COMMA ELSE END EXCEPTION GTHAN GTHAN_ASSIGN ID IF LBRACE LTHAN LTHAN_ASSIGN MINUS NUM RAISE RBRACE STRING UNTIL WHILEprogram : begin_block\n               | if_block\n               | raise_block\n               | until_block\n               | while_blockbegin_block : BEGIN LBRACE statement_list RBRACEif_block : IF condition statement_list ENDif_block : IF condition statement_list ELSE statement_list ENDraise_block : RAISE EXCEPTION COMMA STRINGraise_block : RAISE STRINGuntil_block : statement_list UNTIL condition statement_list ENDwhile_block : statement_list WHILE condition statement_list ENDstatement_list : statementstatement_list : statement_list statementstatement : assignmentassignment : ID ASSIGN NUMassignment : ID ASSIGN MINUS NUMassignment : ID ASSIGN IDcondition : ID GTHAN NUMcondition : ID LTHAN NUMcondition : ID GTHAN_ASSIGN NUMcondition : ID LTHAN_ASSIGN NUMcondition : ID ASSIGN_ASSIGN NUMcondition : ID ASSIGN_ASSIGN ID'
    
_lr_action_items = {'BEGIN':([0,],[7,]),'IF':([0,],[9,]),'RAISE':([0,],[10,]),'ID':([0,8,9,11,12,14,15,16,17,18,22,23,24,25,26,31,33,34,37,38,40,41,42,43,44,45,46,48,51,],[13,13,19,-13,-15,13,19,19,-14,13,33,13,13,13,13,45,-18,-16,13,13,13,-19,-20,-21,-22,-24,-23,-17,13,]),'$end':([1,2,3,4,5,6,21,36,39,47,49,50,52,],[0,-1,-2,-3,-4,-5,-10,-6,-7,-9,-11,-12,-8,]),'LBRACE':([7,],[14,]),'UNTIL':([8,11,12,17,33,34,48,],[15,-13,-15,-14,-18,-16,-17,]),'WHILE':([8,11,12,17,33,34,48,],[16,-13,-15,-14,-18,-16,-17,]),'EXCEPTION':([10,],[20,]),'STRING':([10,32,],[21,47,]),'RBRACE':([11,12,17,23,33,34,48,],[-13,-15,-14,36,-18,-16,-17,]),'END':([11,12,17,26,33,34,37,38,48,51,],[-13,-15,-14,39,-18,-16,49,50,-17,52,]),'ELSE':([11,12,17,26,33,34,48,],[-13,-15,-14,40,-18,-16,-17,]),'ASSIGN':([13,],[22,]),'GTHAN':([19,],[27,]),'LTHAN':([19,],[28,]),'GTHAN_ASSIGN':([19,],[29,]),'LTHAN_ASSIGN':([19,],[30,]),'ASSIGN_ASSIGN':([19,],[31,]),'COMMA':([20,],[32,]),'NUM':([22,27,28,29,30,31,35,],[34,41,42,43,44,46,48,]),'MINUS':([22,],[35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'begin_block':([0,],[2,]),'if_block':([0,],[3,]),'raise_block':([0,],[4,]),'until_block':([0,],[5,]),'while_block':([0,],[6,]),'statement_list':([0,14,18,24,25,40,],[8,23,26,37,38,51,]),'statement':([0,8,14,18,23,24,25,26,37,38,40,51,],[11,17,11,11,17,11,11,17,17,17,11,17,]),'assignment':([0,8,14,18,23,24,25,26,37,38,40,51,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'condition':([9,15,16,],[18,24,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> begin_block','program',1,'p_program','ruby_parser.py',88),
  ('program -> if_block','program',1,'p_program','ruby_parser.py',89),
  ('program -> raise_block','program',1,'p_program','ruby_parser.py',90),
  ('program -> until_block','program',1,'p_program','ruby_parser.py',91),
  ('program -> while_block','program',1,'p_program','ruby_parser.py',92),
  ('begin_block -> BEGIN LBRACE statement_list RBRACE','begin_block',4,'p_begin_block','ruby_parser.py',97),
  ('if_block -> IF condition statement_list END','if_block',4,'p_if_block_simple','ruby_parser.py',102),
  ('if_block -> IF condition statement_list ELSE statement_list END','if_block',6,'p_if_block_with_else','ruby_parser.py',106),
  ('raise_block -> RAISE EXCEPTION COMMA STRING','raise_block',4,'p_raise_exception','ruby_parser.py',111),
  ('raise_block -> RAISE STRING','raise_block',2,'p_raise_string','ruby_parser.py',115),
  ('until_block -> statement_list UNTIL condition statement_list END','until_block',5,'p_until_block','ruby_parser.py',120),
  ('while_block -> statement_list WHILE condition statement_list END','while_block',5,'p_while_block','ruby_parser.py',125),
  ('statement_list -> statement','statement_list',1,'p_statement_list_single','ruby_parser.py',130),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multiple','ruby_parser.py',134),
  ('statement -> assignment','statement',1,'p_statement','ruby_parser.py',140),
  ('assignment -> ID ASSIGN NUM','assignment',3,'p_assignment_num','ruby_parser.py',145),
  ('assignment -> ID ASSIGN MINUS NUM','assignment',4,'p_assignment_minus_num','ruby_parser.py',149),
  ('assignment -> ID ASSIGN ID','assignment',3,'p_assignment_id','ruby_parser.py',153),
  ('condition -> ID GTHAN NUM','condition',3,'p_condition_gthan','ruby_parser.py',158),
  ('condition -> ID LTHAN NUM','condition',3,'p_condition_lthan','ruby_parser.py',162),
  ('condition -> ID GTHAN_ASSIGN NUM','condition',3,'p_condition_gthan_equal','ruby_parser.py',166),
  ('condition -> ID LTHAN_ASSIGN NUM','condition',3,'p_condition_lthan_equal','ruby_parser.py',170),
  ('condition -> ID ASSIGN_ASSIGN NUM','condition',3,'p_condition_equal_num','ruby_parser.py',174),
  ('condition -> ID ASSIGN_ASSIGN ID','condition',3,'p_condition_equal_id','ruby_parser.py',178),
]
