Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> begin_block
Rule 2     program -> if_block
Rule 3     program -> raise_block
Rule 4     program -> until_block
Rule 5     program -> while_block
Rule 6     begin_block -> BEGIN LBRACE statement_list RBRACE
Rule 7     if_block -> IF condition statement_list END
Rule 8     if_block -> IF condition statement_list ELSE statement_list END
Rule 9     raise_block -> RAISE EXCEPTION COMMA STRING
Rule 10    raise_block -> RAISE STRING
Rule 11    until_block -> statement_list UNTIL condition statement_list END
Rule 12    while_block -> statement_list WHILE condition statement_list END
Rule 13    statement_list -> statement
Rule 14    statement_list -> statement_list statement
Rule 15    statement -> assignment
Rule 16    assignment -> ID ASSIGN NUM
Rule 17    assignment -> ID ASSIGN MINUS NUM
Rule 18    assignment -> ID ASSIGN ID
Rule 19    condition -> ID GTHAN NUM
Rule 20    condition -> ID LTHAN NUM
Rule 21    condition -> ID GTHAN_ASSIGN NUM
Rule 22    condition -> ID LTHAN_ASSIGN NUM
Rule 23    condition -> ID ASSIGN_ASSIGN NUM
Rule 24    condition -> ID ASSIGN_ASSIGN ID

Terminals, with rules where they appear

ASSIGN               : 16 17 18
ASSIGN_ASSIGN        : 23 24
BEGIN                : 6
COMMA                : 9
ELSE                 : 8
END                  : 7 8 11 12
EXCEPTION            : 9
GTHAN                : 19
GTHAN_ASSIGN         : 21
ID                   : 16 17 18 18 19 20 21 22 23 24 24
IF                   : 7 8
LBRACE               : 6
LTHAN                : 20
LTHAN_ASSIGN         : 22
MINUS                : 17
NUM                  : 16 17 19 20 21 22 23
RAISE                : 9 10
RBRACE               : 6
STRING               : 9 10
UNTIL                : 11
WHILE                : 12
error                : 

Nonterminals, with rules where they appear

assignment           : 15
begin_block          : 1
condition            : 7 8 11 12
if_block             : 2
program              : 0
raise_block          : 3
statement            : 13 14
statement_list       : 6 7 8 8 11 11 12 12 14
until_block          : 4
while_block          : 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . begin_block
    (2) program -> . if_block
    (3) program -> . raise_block
    (4) program -> . until_block
    (5) program -> . while_block
    (6) begin_block -> . BEGIN LBRACE statement_list RBRACE
    (7) if_block -> . IF condition statement_list END
    (8) if_block -> . IF condition statement_list ELSE statement_list END
    (9) raise_block -> . RAISE EXCEPTION COMMA STRING
    (10) raise_block -> . RAISE STRING
    (11) until_block -> . statement_list UNTIL condition statement_list END
    (12) while_block -> . statement_list WHILE condition statement_list END
    (13) statement_list -> . statement
    (14) statement_list -> . statement_list statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    BEGIN           shift and go to state 7
    IF              shift and go to state 9
    RAISE           shift and go to state 10
    ID              shift and go to state 13

    program                        shift and go to state 1
    begin_block                    shift and go to state 2
    if_block                       shift and go to state 3
    raise_block                    shift and go to state 4
    until_block                    shift and go to state 5
    while_block                    shift and go to state 6
    statement_list                 shift and go to state 8
    statement                      shift and go to state 11
    assignment                     shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> begin_block .

    $end            reduce using rule 1 (program -> begin_block .)


state 3

    (2) program -> if_block .

    $end            reduce using rule 2 (program -> if_block .)


state 4

    (3) program -> raise_block .

    $end            reduce using rule 3 (program -> raise_block .)


state 5

    (4) program -> until_block .

    $end            reduce using rule 4 (program -> until_block .)


state 6

    (5) program -> while_block .

    $end            reduce using rule 5 (program -> while_block .)


state 7

    (6) begin_block -> BEGIN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 14


state 8

    (11) until_block -> statement_list . UNTIL condition statement_list END
    (12) while_block -> statement_list . WHILE condition statement_list END
    (14) statement_list -> statement_list . statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    UNTIL           shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 13

    statement                      shift and go to state 17
    assignment                     shift and go to state 12

state 9

    (7) if_block -> IF . condition statement_list END
    (8) if_block -> IF . condition statement_list ELSE statement_list END
    (19) condition -> . ID GTHAN NUM
    (20) condition -> . ID LTHAN NUM
    (21) condition -> . ID GTHAN_ASSIGN NUM
    (22) condition -> . ID LTHAN_ASSIGN NUM
    (23) condition -> . ID ASSIGN_ASSIGN NUM
    (24) condition -> . ID ASSIGN_ASSIGN ID

    ID              shift and go to state 19

    condition                      shift and go to state 18

state 10

    (9) raise_block -> RAISE . EXCEPTION COMMA STRING
    (10) raise_block -> RAISE . STRING

    EXCEPTION       shift and go to state 20
    STRING          shift and go to state 21


state 11

    (13) statement_list -> statement .

    UNTIL           reduce using rule 13 (statement_list -> statement .)
    WHILE           reduce using rule 13 (statement_list -> statement .)
    ID              reduce using rule 13 (statement_list -> statement .)
    RBRACE          reduce using rule 13 (statement_list -> statement .)
    END             reduce using rule 13 (statement_list -> statement .)
    ELSE            reduce using rule 13 (statement_list -> statement .)


state 12

    (15) statement -> assignment .

    UNTIL           reduce using rule 15 (statement -> assignment .)
    WHILE           reduce using rule 15 (statement -> assignment .)
    ID              reduce using rule 15 (statement -> assignment .)
    RBRACE          reduce using rule 15 (statement -> assignment .)
    END             reduce using rule 15 (statement -> assignment .)
    ELSE            reduce using rule 15 (statement -> assignment .)


state 13

    (16) assignment -> ID . ASSIGN NUM
    (17) assignment -> ID . ASSIGN MINUS NUM
    (18) assignment -> ID . ASSIGN ID

    ASSIGN          shift and go to state 22


state 14

    (6) begin_block -> BEGIN LBRACE . statement_list RBRACE
    (13) statement_list -> . statement
    (14) statement_list -> . statement_list statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    ID              shift and go to state 13

    statement_list                 shift and go to state 23
    statement                      shift and go to state 11
    assignment                     shift and go to state 12

state 15

    (11) until_block -> statement_list UNTIL . condition statement_list END
    (19) condition -> . ID GTHAN NUM
    (20) condition -> . ID LTHAN NUM
    (21) condition -> . ID GTHAN_ASSIGN NUM
    (22) condition -> . ID LTHAN_ASSIGN NUM
    (23) condition -> . ID ASSIGN_ASSIGN NUM
    (24) condition -> . ID ASSIGN_ASSIGN ID

    ID              shift and go to state 19

    condition                      shift and go to state 24

state 16

    (12) while_block -> statement_list WHILE . condition statement_list END
    (19) condition -> . ID GTHAN NUM
    (20) condition -> . ID LTHAN NUM
    (21) condition -> . ID GTHAN_ASSIGN NUM
    (22) condition -> . ID LTHAN_ASSIGN NUM
    (23) condition -> . ID ASSIGN_ASSIGN NUM
    (24) condition -> . ID ASSIGN_ASSIGN ID

    ID              shift and go to state 19

    condition                      shift and go to state 25

state 17

    (14) statement_list -> statement_list statement .

    UNTIL           reduce using rule 14 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 14 (statement_list -> statement_list statement .)
    ID              reduce using rule 14 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 14 (statement_list -> statement_list statement .)
    END             reduce using rule 14 (statement_list -> statement_list statement .)
    ELSE            reduce using rule 14 (statement_list -> statement_list statement .)


state 18

    (7) if_block -> IF condition . statement_list END
    (8) if_block -> IF condition . statement_list ELSE statement_list END
    (13) statement_list -> . statement
    (14) statement_list -> . statement_list statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    ID              shift and go to state 13

    statement_list                 shift and go to state 26
    statement                      shift and go to state 11
    assignment                     shift and go to state 12

state 19

    (19) condition -> ID . GTHAN NUM
    (20) condition -> ID . LTHAN NUM
    (21) condition -> ID . GTHAN_ASSIGN NUM
    (22) condition -> ID . LTHAN_ASSIGN NUM
    (23) condition -> ID . ASSIGN_ASSIGN NUM
    (24) condition -> ID . ASSIGN_ASSIGN ID

    GTHAN           shift and go to state 27
    LTHAN           shift and go to state 28
    GTHAN_ASSIGN    shift and go to state 29
    LTHAN_ASSIGN    shift and go to state 30
    ASSIGN_ASSIGN   shift and go to state 31


state 20

    (9) raise_block -> RAISE EXCEPTION . COMMA STRING

    COMMA           shift and go to state 32


state 21

    (10) raise_block -> RAISE STRING .

    $end            reduce using rule 10 (raise_block -> RAISE STRING .)


state 22

    (16) assignment -> ID ASSIGN . NUM
    (17) assignment -> ID ASSIGN . MINUS NUM
    (18) assignment -> ID ASSIGN . ID

    NUM             shift and go to state 34
    MINUS           shift and go to state 35
    ID              shift and go to state 33


state 23

    (6) begin_block -> BEGIN LBRACE statement_list . RBRACE
    (14) statement_list -> statement_list . statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    RBRACE          shift and go to state 36
    ID              shift and go to state 13

    statement                      shift and go to state 17
    assignment                     shift and go to state 12

state 24

    (11) until_block -> statement_list UNTIL condition . statement_list END
    (13) statement_list -> . statement
    (14) statement_list -> . statement_list statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    ID              shift and go to state 13

    statement_list                 shift and go to state 37
    statement                      shift and go to state 11
    assignment                     shift and go to state 12

state 25

    (12) while_block -> statement_list WHILE condition . statement_list END
    (13) statement_list -> . statement
    (14) statement_list -> . statement_list statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    ID              shift and go to state 13

    statement_list                 shift and go to state 38
    statement                      shift and go to state 11
    assignment                     shift and go to state 12

state 26

    (7) if_block -> IF condition statement_list . END
    (8) if_block -> IF condition statement_list . ELSE statement_list END
    (14) statement_list -> statement_list . statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    END             shift and go to state 39
    ELSE            shift and go to state 40
    ID              shift and go to state 13

    statement                      shift and go to state 17
    assignment                     shift and go to state 12

state 27

    (19) condition -> ID GTHAN . NUM

    NUM             shift and go to state 41


state 28

    (20) condition -> ID LTHAN . NUM

    NUM             shift and go to state 42


state 29

    (21) condition -> ID GTHAN_ASSIGN . NUM

    NUM             shift and go to state 43


state 30

    (22) condition -> ID LTHAN_ASSIGN . NUM

    NUM             shift and go to state 44


state 31

    (23) condition -> ID ASSIGN_ASSIGN . NUM
    (24) condition -> ID ASSIGN_ASSIGN . ID

    NUM             shift and go to state 46
    ID              shift and go to state 45


state 32

    (9) raise_block -> RAISE EXCEPTION COMMA . STRING

    STRING          shift and go to state 47


state 33

    (18) assignment -> ID ASSIGN ID .

    UNTIL           reduce using rule 18 (assignment -> ID ASSIGN ID .)
    WHILE           reduce using rule 18 (assignment -> ID ASSIGN ID .)
    ID              reduce using rule 18 (assignment -> ID ASSIGN ID .)
    RBRACE          reduce using rule 18 (assignment -> ID ASSIGN ID .)
    END             reduce using rule 18 (assignment -> ID ASSIGN ID .)
    ELSE            reduce using rule 18 (assignment -> ID ASSIGN ID .)


state 34

    (16) assignment -> ID ASSIGN NUM .

    UNTIL           reduce using rule 16 (assignment -> ID ASSIGN NUM .)
    WHILE           reduce using rule 16 (assignment -> ID ASSIGN NUM .)
    ID              reduce using rule 16 (assignment -> ID ASSIGN NUM .)
    RBRACE          reduce using rule 16 (assignment -> ID ASSIGN NUM .)
    END             reduce using rule 16 (assignment -> ID ASSIGN NUM .)
    ELSE            reduce using rule 16 (assignment -> ID ASSIGN NUM .)


state 35

    (17) assignment -> ID ASSIGN MINUS . NUM

    NUM             shift and go to state 48


state 36

    (6) begin_block -> BEGIN LBRACE statement_list RBRACE .

    $end            reduce using rule 6 (begin_block -> BEGIN LBRACE statement_list RBRACE .)


state 37

    (11) until_block -> statement_list UNTIL condition statement_list . END
    (14) statement_list -> statement_list . statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    END             shift and go to state 49
    ID              shift and go to state 13

    statement                      shift and go to state 17
    assignment                     shift and go to state 12

state 38

    (12) while_block -> statement_list WHILE condition statement_list . END
    (14) statement_list -> statement_list . statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    END             shift and go to state 50
    ID              shift and go to state 13

    statement                      shift and go to state 17
    assignment                     shift and go to state 12

state 39

    (7) if_block -> IF condition statement_list END .

    $end            reduce using rule 7 (if_block -> IF condition statement_list END .)


state 40

    (8) if_block -> IF condition statement_list ELSE . statement_list END
    (13) statement_list -> . statement
    (14) statement_list -> . statement_list statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    ID              shift and go to state 13

    statement_list                 shift and go to state 51
    statement                      shift and go to state 11
    assignment                     shift and go to state 12

state 41

    (19) condition -> ID GTHAN NUM .

    ID              reduce using rule 19 (condition -> ID GTHAN NUM .)


state 42

    (20) condition -> ID LTHAN NUM .

    ID              reduce using rule 20 (condition -> ID LTHAN NUM .)


state 43

    (21) condition -> ID GTHAN_ASSIGN NUM .

    ID              reduce using rule 21 (condition -> ID GTHAN_ASSIGN NUM .)


state 44

    (22) condition -> ID LTHAN_ASSIGN NUM .

    ID              reduce using rule 22 (condition -> ID LTHAN_ASSIGN NUM .)


state 45

    (24) condition -> ID ASSIGN_ASSIGN ID .

    ID              reduce using rule 24 (condition -> ID ASSIGN_ASSIGN ID .)


state 46

    (23) condition -> ID ASSIGN_ASSIGN NUM .

    ID              reduce using rule 23 (condition -> ID ASSIGN_ASSIGN NUM .)


state 47

    (9) raise_block -> RAISE EXCEPTION COMMA STRING .

    $end            reduce using rule 9 (raise_block -> RAISE EXCEPTION COMMA STRING .)


state 48

    (17) assignment -> ID ASSIGN MINUS NUM .

    UNTIL           reduce using rule 17 (assignment -> ID ASSIGN MINUS NUM .)
    WHILE           reduce using rule 17 (assignment -> ID ASSIGN MINUS NUM .)
    ID              reduce using rule 17 (assignment -> ID ASSIGN MINUS NUM .)
    RBRACE          reduce using rule 17 (assignment -> ID ASSIGN MINUS NUM .)
    END             reduce using rule 17 (assignment -> ID ASSIGN MINUS NUM .)
    ELSE            reduce using rule 17 (assignment -> ID ASSIGN MINUS NUM .)


state 49

    (11) until_block -> statement_list UNTIL condition statement_list END .

    $end            reduce using rule 11 (until_block -> statement_list UNTIL condition statement_list END .)


state 50

    (12) while_block -> statement_list WHILE condition statement_list END .

    $end            reduce using rule 12 (while_block -> statement_list WHILE condition statement_list END .)


state 51

    (8) if_block -> IF condition statement_list ELSE statement_list . END
    (14) statement_list -> statement_list . statement
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN NUM
    (17) assignment -> . ID ASSIGN MINUS NUM
    (18) assignment -> . ID ASSIGN ID

    END             shift and go to state 52
    ID              shift and go to state 13

    statement                      shift and go to state 17
    assignment                     shift and go to state 12

state 52

    (8) if_block -> IF condition statement_list ELSE statement_list END .

    $end            reduce using rule 8 (if_block -> IF condition statement_list ELSE statement_list END .)

